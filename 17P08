#include <Servo.h>

#define PIN_POTENTIOMETER 3 // Potentiometer at Pin A3
#define PIN_SERVO 10
#define PIN_LED 9
#define IR A0

#define _DUTY_MIN 553  
#define _DUTY_NEU 1476 
#define _DUTY_MAX 2399 
#define _DIST_MIN 100.0 
#define _DIST_MAX 250.0 
#define _EMA_ALPHA 0.5

#define LOOP_INTERVAL 50   

Servo myservo;
unsigned long last_loop_time;   
float dist_prev = _DIST_MAX;
float dist_ema;

void setup()
{
  pinMode(PIN_LED, OUTPUT);
  myservo.attach(PIN_SERVO); 
  myservo.writeMicroseconds(_DUTY_NEU);
  
  Serial.begin(2000000);
}

void loop()
{
  unsigned long time_curr = millis();
  int a_value, duty;
  float dist;

  // wait until next event time
  if (time_curr < (last_loop_time + LOOP_INTERVAL))
    return;
  last_loop_time += LOOP_INTERVAL;

 
  
  
  a_value = analogRead(IR);
  
  dist = (6762.0/ (a_value-9)-4.0)*10.0 - 60.0;
 
  if (dist < _DIST_MIN) {
    dist = dist_prev;
    digitalWrite(PIN_LED, 1);
  }
  else if (dist > _DIST_MAX) {
    dist = dist_prev;
    digitalWrite(PIN_LED, 1);
  }
  else {
    digitalWrite(PIN_LED, 0);
  }
  
  
  dist_ema = (_EMA_ALPHA * dist) + ((1-_EMA_ALPHA) * dist_ema);
  
  duty = (_DUTY_MIN+(_DUTY_MAX-_DUTY_MIN))*((dist_ema-_DIST_MIN)/(_DIST_MAX - _DIST_MIN));
  
  if (dist_ema < _DIST_MIN) {
    myservo.writeMicroseconds(_DUTY_MIN);
  } else if (dist_ema > _DIST_MAX) {
    myservo.writeMicroseconds(_DUTY_MAX);
  } else {   
    myservo.writeMicroseconds(duty);
  }

  dist_prev = dist;
  // print IR sensor value, distnace, duty !!!
  Serial.print("MIN:"); Serial.print(_DIST_MIN);
  Serial.print(",IR:"); Serial.print(a_value);
  Serial.print(",dist:"); Serial.print(dist);
  Serial.print(",ema:"); Serial.print(dist_ema);
  Serial.print(",servo:"); Serial.print(duty);
  Serial.print(",MAX:"); Serial.print(_DIST_MAX);
  Serial.println("");

}
